trigger: none

resources:
  pipelines:
  - pipeline: build
    source: 'function-event-hub-processor - BUILD'
  
variables:
  vmImageName: 'windows-latest'
  azureSubscription: 'Demo Account'
  region: 'eastus'
  resourceGroupName: 'rutzsco-demo-event-processor'
  functionAppName: 'rutzsco-demo-event-processor'  
  appName: 'rutzsco-demo-eventp-aca'
  environment: 'ci'
  containerImage: 'rutzscolabcr.azurecr.io/event-processing/demo-api:$(resources.pipeline.build.runName)'
  templateFile: '$(Pipeline.Workspace)/build/Infrastructure/ACA/main.bicep'
  acrName: 'rutzscolabcr'
  acrUsername: 'rutzscolabcr'

stages:
 - stage: CI
   displayName: CI stage 
  
   jobs:
   - deployment: Deploy
     displayName: Deploy
     environment: 'CI'
     pool:
        vmImage: $(vmImageName)   
      
     strategy:
        runOnce:
          deploy:
  
            steps:
                       
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Ingest Event Hub - Deploy'
              inputs:
                azureResourceManagerConnection: '$(azureSubscription)'
                resourceGroupName: '$(resourceGroupName)'
                location: '$(region)'
                csmFile: '$(Pipeline.Workspace)/build/Infrastructure/event-hub.json'
                overrideParameters: '-namespaces_name "rutzsco-demo-ingest-nsp-ci" -eventhubs_name "ingest-001"'
                deploymentOutputs: ResourceGroupDeploymentOutputs

            - powershell: |
                $outputs = ConvertFrom-Json $($env:ResourceGroupDeploymentOutputs)
   
                foreach ($output in $outputs.PSObject.Properties) {
                    Write-Host "##vso[task.setvariable variable=RGDO_$($output.Name)]$($output.Value.value)"
                }
   
              displayName: 'Ingest Event Hub - Outputs copy'

            - task: AzureResourceGroupDeployment@3
              displayName: '3. Create Function Infrastructure'
              inputs:
                azureResourceManagerConnection: '$(azureSubscription)'
                resourceGroupName: '$(resourceGroupName)'
                location: '$(region)'
                csmFile: '$(Pipeline.Workspace)/build/Infrastructure/function-app-consumption.json'
                overrideParameters: '-appName $(functionAppName) -storageAccountName azfuncepci01'
                deploymentOutputs: ResourceGroupDeploymentOutputs
 
            - task: AzureFunctionApp@1
              displayName: '4. Azure functions app deploy'
              inputs:
                azureSubscription: '$(azureSubscription)'
                appType: functionApp
                appName: $(functionAppName)
                package: '$(Pipeline.Workspace)/build/App/Demo.EventProcessor.zip'
                AppSettings: '-IngestEventHubConnectionString $(RGDO_NamespaceDefaultConnectionString) -SCALE_CONTROLLER_LOGGING_ENABLED AppInsights:Verbose'

            - task: AzureResourceGroupDeployment@3
              displayName: '5. Create Sender Function Infrastructure'
              inputs:
                azureResourceManagerConnection: '$(azureSubscription)'
                resourceGroupName: '$(resourceGroupName)'
                location: '$(region)'
                csmFile: '$(Pipeline.Workspace)/build/Infrastructure/function-app-consumption.json'
                overrideParameters: '-appName rutzsco-demo-event-sender -storageAccountName azfunces01'
                deploymentOutputs: ResourceGroupDeploymentOutputs
 
            - task: AzureFunctionApp@1
              displayName: '6. Azure Sender functions app deploy'
              inputs:
                azureSubscription: '$(azureSubscription)'
                appType: functionApp
                appName: rutzsco-demo-event-sender
                package: '$(Pipeline.Workspace)/build/App/Demo.EventSender.zip'
                AppSettings: '-IngestEventHubConnectionString $(RGDO_NamespaceDefaultConnectionString)'

            - task: AzureCLI@2
              displayName: '7. Azure Sender functions app deploy'
              inputs:
                azureSubscription: $(azureSubscription)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az group create --name $(resourceGroupName) --location $(region)  
                  az deployment group create --resource-group $(resourceGroupName) --template-file $(templateFile) --parameters appName=$(appName) envName=$(environment) containerImage=$(containerImage) acrName=$(acrName) acrUsername=$(acrUsername) acrPassword=$(acrPassword) > outputs.json